package providersdk_test

import (
	"os"
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccResourceServicesAdvancedAntiMalwarePolicy_basic(t *testing.T) {
	if os.Getenv("TESTACC_SRX") != "" {
		resource.Test(t, resource.TestCase{
			PreCheck:                 func() { testAccPreCheck(t) },
			ProtoV5ProviderFactories: testAccProtoV5ProviderFactories,
			Steps: []resource.TestStep{
				{
					Config: testAccResourceServicesAdvancedAntiMalwarePolicyCreate(),
				},
				{
					Config: testAccResourceServicesAdvancedAntiMalwarePolicyUpdate(),
				},
				{
					ResourceName:      "junos_services_advanced_anti_malware_policy.testacc_advAntiMalPolicy",
					ImportState:       true,
					ImportStateVerify: true,
				},
			},
		})
	}
}

func testAccResourceServicesAdvancedAntiMalwarePolicyCreate() string {
	return `
resource "junos_services_advanced_anti_malware_policy" "testacc_advAntiMalPolicy" {
  name                              = "testacc_advAntiMalPolicy.1/u"
  blacklist_notification_log        = true
  default_notification_log          = true
  fallback_options_action           = "permit"
  fallback_options_notification_log = true
  verdict_threshold                 = "recommended"
  whitelist_notification_log        = true
}
`
}

func testAccResourceServicesAdvancedAntiMalwarePolicyUpdate() string {
	return `
resource "junos_services_advanced_anti_malware_policy" "testacc_advAntiMalPolicy" {
  name                              = "testacc_advAntiMalPolicy.1/u"
  blacklist_notification_log        = true
  default_notification_log          = true
  fallback_options_action           = "permit"
  fallback_options_notification_log = true
  http_action                       = "permit"
  http_inspection_profile           = "test"
  http_notification_log             = true
  imap_inspection_profile           = "test"
  imap_notification_log             = true
  smtp_inspection_profile           = "test"
  smtp_notification_log             = true
  verdict_threshold                 = 5
  whitelist_notification_log        = true
}
`
}
